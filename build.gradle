plugins {
    id 'maven'
    id 'java'
    id 'idea'
    id 'com.adarshr.test-logger' version '1.7.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
    maven {
        // Aion dependencies
        url "$rootProject.projectDir/lib"
    }
}

ext {
    aionVersion = '1.4'
    web3jVersion = '4.5.0'
}

dependencies {
    implementation "org.aion:avm-api:$aionVersion"
    implementation "org.aion:avm-tooling:$aionVersion"
    implementation "org.aion:avm-userlib:$aionVersion"

    implementation "org.web3j:core:$web3jVersion"
    implementation "org.web3j.aion:web3j-aion-avm:$version"
    implementation "org.web3j.aion:web3j-aion-codegen:$version"

    implementation "ch.qos.logback:logback-classic:1.2.3"

    runtimeOnly "com.github.schnitker.logmanager:logmgr-logback:1.0.2"

    testImplementation "junit:junit:4.12"
}

testlogger {
    showStandardStreams = true
}

sourceSets {
    main {
        java {
            srcDir {
                "$project.buildDir/generated/source/web3j-aion/main/java"
            }
        }
    }
}

task generateContractWrappers(type: JavaExec, group: 'aion', dependsOn: 'clean') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.web3j.aion.codegen.AionGeneratorMain'

    args '--abiFile', "$projectDir/hello-world-avm/target/hello-world-avm-${version}.abi",
            '--binFile', "$projectDir/hello-world-avm/target/hello-world-avm-${version}.jar",
            '--outputDir', "$project.buildDir/generated/source/web3j-aion/main/java",
            '--package', 'org.web3j.aion.samples.generated'
}

compileJava {
    source "$project.buildDir/generated/source/web3j-aion/main/java"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    source "$project.buildDir/generated/source/web3j-aion/main/java"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    dependsOn 'generateContractWrappers'
}

